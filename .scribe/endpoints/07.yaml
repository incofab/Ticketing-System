name: 'Event Images'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/event-images/events/{event_id}/index'
    metadata:
      groupName: 'Event Images'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      event_id:
        name: event_id
        description: 'The ID of the event.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      event_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/event-images/events/{event_id}/store'
    metadata:
      groupName: 'Event Images'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      event_id:
        name: event_id
        description: 'The ID of the event.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      event_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      images:
        name: images
        description: 'Must have at least 1 items. Must not have more than 5 items.'
        required: true
        example: g
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'images[].image':
        name: 'images[].image'
        description: "'images.*.event_id' => ['required', 'exists:events,id'],. Must be a file."
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'images[].reference':
        name: 'images[].reference'
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      images: g
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/event-images/{eventImage_id}/destroy'
    metadata:
      groupName: 'Event Images'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      eventImage_id:
        name: eventImage_id
        description: 'The ID of the eventImage.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      eventImage_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
